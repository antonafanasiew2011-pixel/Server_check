#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Server Check
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –≤—Ä—É—á–Ω—É—é
"""

import os
import schedule
import time
from datetime import datetime
from backup import ServerCheckBackup

class AutoBackup:
    def __init__(self):
        self.backup = ServerCheckBackup()
        self.log_file = "backup.log"
    
    def log(self, message):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        log_message = f"[{timestamp}] {message}"
        print(log_message)
        
        with open(self.log_file, "a", encoding="utf-8") as f:
            f.write(log_message + "\n")
    
    def create_scheduled_backup(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ backup –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
        try:
            self.log("üîÑ –ù–∞—á–∞–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ backup'–∞")
            success = self.backup.create_backup()
            
            if success:
                self.log("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                self.log("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ backup'–∞")
                
        except Exception as e:
            self.log(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ backup'–∞: {e}")
    
    def cleanup_old_backups(self, keep_days=30):
        """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤"""
        try:
            from pathlib import Path
            import os
            
            backup_dir = Path("backups")
            if not backup_dir.exists():
                return
            
            cutoff_time = time.time() - (keep_days * 24 * 60 * 60)
            deleted_count = 0
            
            for backup_file in backup_dir.glob("*.zip"):
                if backup_file.stat().st_mtime < cutoff_time:
                    backup_file.unlink()
                    deleted_count += 1
                    self.log(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π backup: {backup_file.name}")
            
            if deleted_count > 0:
                self.log(f"üßπ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤")
                
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤: {e}")
    
    def start_scheduler(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ backup'–æ–≤"""
        self.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ backup'–æ–≤")
        
        # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π backup –≤ 2:00
        schedule.every().day.at("02:00").do(self.create_scheduled_backup)
        
        # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 3:00
        schedule.every().sunday.at("03:00").do(self.cleanup_old_backups)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π backup –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        # schedule.every(5).minutes.do(self.create_scheduled_backup)
        
        self.log("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:")
        self.log("   - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π backup –≤ 02:00")
        self.log("   - –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ 03:00")
        
        while True:
            schedule.run_pending()
            time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    
    def run_once(self):
        """–ó–∞–ø—É—Å–∫ backup'–∞ –æ–¥–∏–Ω —Ä–∞–∑"""
        self.log("üîÑ –ó–∞–ø—É—Å–∫ —Ä–∞–∑–æ–≤–æ–≥–æ backup'–∞")
        self.create_scheduled_backup()
        self.cleanup_old_backups()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    auto_backup = AutoBackup()
    
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command == "once":
            auto_backup.run_once()
        elif command == "schedule":
            auto_backup.start_scheduler()
        elif command == "cleanup":
            auto_backup.cleanup_old_backups()
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            print_help()
    else:
        print_help()

def print_help():
    """–í—ã–≤–æ–¥ —Å–ø—Ä–∞–≤–∫–∏"""
    print("ü§ñ Server Check Auto Backup")
    print("=" * 50)
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python auto_backup.py once      - –°–æ–∑–¥–∞—Ç—å backup –æ–¥–∏–Ω —Ä–∞–∑")
    print("  python auto_backup.py schedule  - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
    print("  python auto_backup.py cleanup   - –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ backup'—ã")
    print()
    print("–ü—Ä–∏–º–µ—Ä—ã:")
    print("  python auto_backup.py once")
    print("  python auto_backup.py schedule")
    print()
    print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ñ–æ–Ω–µ:")
    print("  nohup python auto_backup.py schedule > backup.log 2>&1 &")

if __name__ == "__main__":
    main()
